{"version":3,"sources":["components/components.js","components/showRegistrationFormV2.js","VaccineRegistrationV1.js","reportWebVitals.js","index.js"],"names":["Select","register","options","name","rest","map","value","RegistrationForm","props","useForm","handleSubmit","setError","errors","formState","vaccineregister","className","class","src","alt","onSubmit","data","isNaN","date","getFullYear","type","message","toLocaleString","year","month","day","addNewPerson","htmlFor","placeholder","required","maxLength","minLength","pattern","validate","test","fname","flag","log","phone","checkPhone","aadhar","checkAadhar","valueAsDate","now","Date","ageValidation","Register","index","removePerson","gender","onClick","VaccineRegistration","state","showForm","count","bind","window","confirm","newvaccineregister","this","setState","splice","id","vaccinatePerson","style","textAlign","fontWeight","display","Component","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.3ac25524.chunk.js","sourcesContent":["import React from \"react\";\r\n\r\nexport function Select({ register, options, name, ...rest }) {\r\n    return (\r\n      <select {...register(name)} {...rest}>\r\n        {options.map((value) => (\r\n          <option key={value} value={value}>{value}</option>\r\n        ))}\r\n      </select>\r\n    );\r\n  }","import React from 'react';\r\nimport {useForm} from 'react-hook-form';\r\nimport {Select} from './components';\r\n\r\nexport default function RegistrationForm(props) {\r\n    const {register, handleSubmit, setError, formState: {errors}} = useForm();\r\n    const vaccineregister = props.vaccineregister;\r\n    const onSubmit = data => {\r\n        if(isNaN(data.date.getFullYear()))\r\n        {\r\n            setError(\"date\", {\r\n                type: \"date\",\r\n                message: \"Invalid Date\"\r\n            })\r\n        }\r\n        else{\r\n            var options = { year: 'numeric', month: 'long', day: 'numeric' };\r\n            data.date = data.date.toLocaleString([], options);\r\n            props.addNewPerson(data);\r\n        }\r\n    }\r\n\r\n    return (\r\n        <>\r\n        <div className=\"row d-flex justify-content-center align-items-center h-100\">\r\n        <div class=\"col-md-9 col-lg-6 col-xl-5\">\r\n        <img src=\"https://mdbootstrap.com/img/Photos/new-templates/bootstrap-login-form/draw2.png\" className=\"img-fluid\" alt=\"Sample image\"/>\r\n        </div>\r\n        <div className=\"col-md-8 col-lg-6 col-xl-4 offset-xl-1\">\r\n        <p>All the fields marked with * is required</p>\r\n        <form onSubmit={handleSubmit(onSubmit)}>\r\n            <label className=\"label required\" htmlFor=\"fname\">First Name</label>\r\n            <input type=\"text\" placeholder=\"Enter your First Name\" {...register(\r\n                    \"fname\", \r\n                    {\r\n                        required: \"Name is required\", \r\n                        maxLength: {\r\n                            value:50, \r\n                            message: 'Your name must have less than 50 characters'\r\n                        },\r\n                        minLength: {\r\n                            value: 3,\r\n                            message: \"Your name must have atleast 3 characters\"\r\n                        },\r\n                        pattern: {\r\n                            value: /^[a-zA-Z]{3,50}$/,\r\n                            message: \"Your name must contain only alphabets\"\r\n                        },\r\n                        validate: value => (/([a-zA-Z])\\1\\1/.test(value)===false) || \"A character may not repeat for more than two times\"\r\n                    }\r\n                )}\r\n            />\r\n            {errors.fname && <p>{errors.fname.message}</p>}\r\n            <label htmlFor=\"phone\" className=\"label required\">Phone</label>\r\n            <input type=\"text\" placeholder=\"Enter your phone number\" {...register(\r\n                \"phone\",\r\n                {\r\n                    required: \"Phone Number is required\",\r\n                    minLength: {\r\n                        value: 10,\r\n                        message: \"Phone Number must contain 10 numbers\"\r\n                    },\r\n                    maxLength: {\r\n                        value: 10,\r\n                        message: \"Phone Number must contain only 10 numbers\"\r\n                    },\r\n                    pattern: {\r\n                        value: /^[6789]\\d{10}/,\r\n                        message: \"Phone Number must contain only numbers\"\r\n                    },\r\n                    pattern: {\r\n                        value: /^[6789]/,\r\n                        message: \"Phone Number must start with 6 or 7 or 8 or 9\"\r\n                    },\r\n                    validate: value => checkPhone(value, vaccineregister) || \"This phone number is already registered\"\r\n                }\r\n            )}\r\n            />\r\n            {errors.phone && <p>{errors.phone.message}</p>}\r\n            <label htmlFor=\"gender\" className=\"label required\">Gender</label>\r\n            <Select register={register} name=\"gender\" options={[\"Male\", \"Female\", \"Other\"]}/>\r\n            <label className=\"label required\" htmlFor=\"aadhar\">Aadhar Number</label>\r\n            <input type=\"text\" placeholder=\"Enter your Aadhar Number\" {...register(\r\n                \"aadhar\",\r\n                {\r\n                    required: \"Aadhar Number is required\",\r\n                    minLength: {\r\n                        value: 12,\r\n                        message: \"Aadhar Number must contain 12 digits\"\r\n                    },\r\n                    maxLength: {\r\n                        value: 12,\r\n                        message: \"Aadhar Number must not contain more than 12 digits\"\r\n                    },\r\n                    pattern: {\r\n                        value: /\\d{12}/,\r\n                        message: \"Aadhar number must contain only numbers\"\r\n                    },\r\n                    validate: value => (/^0/.test(value)===false) || \"Aadhar Number cannot start with 0\",\r\n                    validate: value => checkAadhar(value, vaccineregister) || \"This Aadhar number is already registered\"\r\n                }\r\n            )}\r\n            />\r\n            {errors.aadhar && <p>{errors.aadhar.message}</p>}\r\n            <label className=\"label required\" htmlFor=\"date\">Date of Bith</label>\r\n            <input type=\"date\" {...register(\r\n                \"date\",\r\n                {\r\n                    required: \"Date of Birth is required\",\r\n                    valueAsDate: true,\r\n                    validate: value => ageValidation(value) || \"You are not eligible to vaccinate\"\r\n                }\r\n            )}\r\n            />\r\n            {errors.date && <p>{errors.date.message}</p>}\r\n            <input type=\"submit\" value=\"Submit\"/>\r\n        </form></div></div>\r\n        </>\r\n    )\r\n}\r\nfunction ageValidation(value) {\r\n    const now = new Date();\r\n    if(value.getFullYear() > now.getFullYear()-18)\r\n    return false;\r\n    return true;\r\n}\r\nfunction checkPhone(value, register) {\r\n    let flag = true;\r\n    register.map((log)=>{\r\n        if(log.phone === value){flag = false;}\r\n    })\r\n    return flag;\r\n}\r\nfunction checkAadhar(value, register) {\r\n    let flag = true;\r\n    register.map((log)=>{\r\n        if(log.aadhar===value){flag=false}\r\n    })\r\n    return flag;\r\n}","import React, {Component} from 'react';\r\nimport \"./components/stylesV1.css\";\r\nimport RegistrationForm from './components/showRegistrationFormV2';\r\n\r\nclass VaccineRegistration extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            vaccineregister: [],\r\n            showForm: true,\r\n            count: 0\r\n        }\r\n        this.addNewPerson = this.addNewPerson.bind(this);\r\n        this.removePerson = this.removePerson.bind(this);\r\n    }\r\n    addNewPerson(data){\r\n        if(window.confirm(\"Do you want to continue?\")){\r\n        const newvaccineregister = [...this.state.vaccineregister, data];\r\n        this.setState({vaccineregister:newvaccineregister, showForm:false});}\r\n    };\r\n    removePerson(index) {\r\n        const newvaccineregister = this.state.vaccineregister;\r\n        newvaccineregister.splice(index, 1);\r\n        this.setState({ vaccineregister:newvaccineregister });\r\n    };\r\n    display() {\r\n        return(\r\n            <>\r\n            <button type=\"button\" onClick={()=>this.setState({showForm:true})}>Register</button> \r\n                <table id=\"register\">\r\n                    <thead>\r\n                        <tr>\r\n                        <th>#</th>\r\n                        <th>Name</th>\r\n                        <th>Phone</th>\r\n                        <th>Gender</th>\r\n                        <th>Aadhar Number</th>\r\n                        <th>DOB</th>\r\n                        <th>Action</th>\r\n                        </tr>\r\n                    </thead>\r\n                    {this.state.vaccineregister.map((log, index)=> (\r\n                        <Register key={index} index={index} log={log} vaccinatePerson={this.vaccinatePerson} removePerson={this.removePerson}/>\r\n                    )\r\n                    )}\r\n                </table>\r\n            </>\r\n        );\r\n    }\r\n    render(){\r\n        return(\r\n            <div className=\"container-fluid\">\r\n                <div className=\"app\">\r\n                    <h1 style={{textAlign: 'center', fontWeight: 'bolder'}}>Vaccine Registration App</h1><hr/>\r\n                    {this.state.showForm ? <RegistrationForm vaccineregister={this.state.vaccineregister} addNewPerson={this.addNewPerson}/> : ''}\r\n                    <div className=\"log-list\">\r\n                        {this.state.showForm ? '' : this.display()}\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nfunction Register({log, index, removePerson}) {\r\n    return (\r\n        <tbody>\r\n            <tr>\r\n            <td>{index+1}</td>\r\n            <td>{log.fname}</td>\r\n            <td>{log.phone}</td>\r\n            <td>{log.gender}</td>\r\n            <td>{log.aadhar}</td>\r\n            <td>{log.date}</td>\r\n            <td><button onClick={removePerson} type=\"button\">Remove</button></td>\r\n            </tr>\r\n        </tbody>\r\n    );\r\n}\r\nexport default VaccineRegistration;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './VaccineRegistrationV1';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}